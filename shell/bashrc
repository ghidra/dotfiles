#!/bin/bash
#goes in $HOME
#laptop

#export IS_PORTABLE="1"

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

#source my sensitive data for use in scripts
#export HOMEFTPPATH=""
#export HOMESERVERPATH=""
#export SERVERUSER=""
#export SERVERSUSER=""
source "$HOME/.sensitive.sh"

#directory

alias ls='ls --color=auto'

alias lk='ls -lSr' # order by filesize reversed
alias lt='ls -ltr' # order by file modified time
alias lc='ls -ltcr' # order by filectime
alias lu='ls -ltur' # order by file access time
alias ls='ls -h --color --group-directories-first' # flat view w/ directories first
alias l='ls -h --color --group-directories-first' # same as above
alias ll='ls -lv --group-directories-first' # non-flat view
alias lm='ll | more'


PS1='[\u@\h \W]\$ '

# git aliases
alias gs="git status"
alias gl="git log"
alias ga="git add -A"
alias gc="git commit -m"
alias gac="git add -A && git commit -m"
alias gp="git push"
alias gpl="git pull"

#my app aliases

alias edit="vim"
if [ -f "/usr/local/bin/nvim" ]; then
  # if we've got neovim around, let's use it!
  alias _vim="vim"
  alias vim="nvim"
  alias edit="nvim"
fi

#alias edit='nano'
alias sublime='/opt/sublime-text/sublime_text'
alias red='redshift -l  41.1355:-73.7966&'

#server
alias unicron='ssh  $SERVERSUSER@$HOMESERVERPATH'
alias unicron_remote='ssh $SERVERSUSER@$HOMEFTPPATH'
alias mountalpha='sshfs $SERVERUSER@$HOMESERVERPATH:/media/alpha ~/alpha -o reconnect -C -o workaround=all'
alias unmountalpha='fusermount -u ~/alpha'
alias mountbeta="sshfs $SERVERUSER@$HOMESERVERPATH:/media/beta/alpha ~/beta -o reconnect -C -o workaround=all"
alias unmountbeta="fusermount -u ~/beta"

alias bu="rsync -krave 'ssh -p 22' --exclude '/home/$SERVERUSER/projects/.*' --exclude-from '/home/$SERVERUSER/projects/exclude.txt' /home/$SERVERUSER/projects $SERVERUSER@$HOMESERVERPATH:/media/alpha/jrg/projects/work/local"

#misc
#alias printscreen='sleep 10; import -window root screenshot.png'

#my configure aliases

alias a='edit ~/.bashrc'
alias startup='edit ~/.xinitrc'
alias trackpad='edit /etc/X11/xorg.conf.d/50-synaptics.conf'
alias xorgconf='edit /etc/X11/xorg.conf'

#helpers
alias im='feh -g 640x480 -d -S filename .'
alias keycodes='xev | grep -A2 --line-buffered "^KeyRelease" | sed -n "/keycode /s/^.*keycode \([0-9]*\).* (.*, \(.*\)).*$/\1 \2/p" '

#arch helpers
alias volume='alsamixer'
alias aurmake='makepkg -sri'
alias arch-update="tmux -c 'pacaur --noconfirm --noedit -Syyu'" # update all packages

#path
export PATH="$PATH:$HOME/projects/urho/urho3d"
export URHO3D_HOME="$HOME/projects/urho/Urho_DYN"
#export PATH="$PATH:$HOME/projects/urho/urho3d:$HOME/Android/Sdk/tools:$HOME/Android/Sdk/platform-tools"
#export ANDROID_NDK="/opt/android-studio/bin/studio.sh"

#force wifi

alias wifihome='sudo netctl start Home'
alias wifiwork='sudo netctl start Mill'
alias wificheck='ping -c 3 www.google.com'

#reload

alias re='source ~/.bashrc'

#-----------

# the path to other dotfiles
export DOTFILES_PATH="$HOME/dotfiles"

bspwm_padding() {
  NEW_PADDING="$1"
  if [[ ${1:0:1} = "+" ]]; then
    NEW_PADDING=$((`bspc config -d focused top_padding` + ${1:1} ))
  fi
  if [[ ${1:0:1} = "-" ]]; then
    NEW_PADDING=$((`bspc config -d focused top_padding` - ${1:1} ))
  fi
  bspc config -d focused top_padding $NEW_PADDING
  bspc config -d focused left_padding $NEW_PADDING
  bspc config -d focused right_padding $NEW_PADDING
  bspc config -d focused bottom_padding $NEW_PADDING
}
export -f bspwm_padding

XRES_FILE="$HOME/.Xresources"

# interface environment variables
PRIMARY_FONT_XRESOURCES=$(grep "#define primaryfont xft:" "$XRES_FILE" | grep -v "/\*" | head -n 1)
export PRIMARY_FONT_FAMILY=${PRIMARY_FONT_XRESOURCES:24:-3}
export PRIMARY_FONT_FAMILY_WITH_SIZE=${PRIMARY_FONT_XRESOURCES:24}
export PRIMARY_FONT_SIZE=$(echo $PRIMARY_FONT_FAMILY_WITH_SIZE | sed 's/.*\-//')


export BAR_HEIGHT="16"
export BAR_FIFO="$HOME/.bar_fifo"
export BAR_FONT_FAMILY="$PRIMARY_FONT_FAMILY_WITH_SIZE"
export BAR_ICON_FONT_FAMILY="$ICON_FONT_FAMILY_WITH_SIZE"

export WINDOW_GAP="10"
export BORDER_WIDTH="1"

source "$DOTFILES_PATH/shell/funcs.sh"
source "$DOTFILES_PATH/wm/bar/bar_funcs"

#since im not using the base 16 to load colors, I might need to do it manually here for now
export COLOR_FOREGROUND="#ff$(get_color 05)"
export COLOR_BACKGROUND="#ff$(get_color 00)"

# allow a per-device script that is pulled in
if [ -a "$HOME/.bashrc_env" ]; then
  . "$HOME/.bashrc_env"
fi
